{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Thinkful\\\\qualified-exercises\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\FocusTimer.js\";\nimport React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport { secondsToDuration } from \"../utils/duration\";\n\nfunction FocusTimer({\n  focusInterval,\n  breakInterval,\n  isTimerRunning,\n  timer,\n  setTimer,\n  mode,\n  setMode\n}) {\n  useInterval(() => {\n    if (timer === 0) {\n      new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play(); //play the alarm\n\n      if (mode) {\n        setMode(prevState => !prevState); //change status from Focus to break or vise-versa\n\n        return setTimer(breakInterval * 60);\n      } else {\n        setMode(prevState => !prevState); //change status from Focus to break or vise-versa\n\n        return setTimer(focusInterval * 60);\n      }\n    }\n\n    return setTimer(timer - 1);\n  }, isTimerRunning ? 500 : null);\n  console.log(mode);\n  console.log(timer);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, mode ? \"Focusing\" : \"Break\", \" for \", mode ? focusInterval : breakInterval, \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, secondsToDuration(timer), \" remaining\")));\n}\n\nexport default FocusTimer;","map":{"version":3,"sources":["C:/Users/micha/Thinkful/qualified-exercises/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/FocusTimer.js"],"names":["React","useState","useInterval","secondsToDuration","FocusTimer","focusInterval","breakInterval","isTimerRunning","timer","setTimer","mode","setMode","Audio","play","prevState","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;AAEA,SAASC,UAAT,CAAoB;AAClBC,EAAAA,aADkB;AAElBC,EAAAA,aAFkB;AAGlBC,EAAAA,cAHkB;AAIlBC,EAAAA,KAJkB;AAKlBC,EAAAA,QALkB;AAMlBC,EAAAA,IANkB;AAOlBC,EAAAA;AAPkB,CAApB,EAQG;AAGHT,EAAAA,WAAW,CACP,MAAM;AACJ,QAAIM,KAAK,KAAK,CAAd,EAAiB;AACf,UAAII,KAAJ,CAAW,8CAAX,EAA0DC,IAA1D,GADe,CAEf;;AACD,UAAIH,IAAJ,EAAU;AACPC,QAAAA,OAAO,CAAEG,SAAD,IAAe,CAACA,SAAjB,CAAP,CADO,CAEP;;AACA,eAAOL,QAAQ,CAAEH,aAAD,GAAkB,EAAnB,CAAf;AACD,OAJF,MAKM;AACLK,QAAAA,OAAO,CAAEG,SAAD,IAAe,CAACA,SAAjB,CAAP,CADK,CAEL;;AACA,eAAOL,QAAQ,CAAEJ,aAAD,GAAkB,EAAnB,CAAf;AACC;AACF;;AACD,WAAOI,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAf;AACD,GAjBM,EAkBPD,cAAc,GAAG,GAAH,GAAS,IAlBhB,CAAX;AAoBAQ,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IAAI,GAAG,UAAH,GAAgB,OADvB,WACqCA,IAAI,GAAGL,aAAH,GAAmBC,aAD5D,aAFF,eAME;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,iBAAiB,CAACK,KAAD,CADpB,eANF,CADF,CADF;AAcD;;AAED,eAAeJ,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport useInterval from \"../utils/useInterval\";\r\nimport { secondsToDuration } from \"../utils/duration\";\r\n\r\nfunction FocusTimer({\r\n  focusInterval,\r\n  breakInterval,\r\n  isTimerRunning,\r\n  timer,\r\n  setTimer,\r\n  mode,\r\n  setMode\r\n}) {\r\n\r\n\r\nuseInterval(\r\n    () => {\r\n      if (timer === 0) { \r\n        new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\r\n        //play the alarm\r\n       if (mode) {\r\n          setMode((prevState) => !prevState);\r\n          //change status from Focus to break or vise-versa\r\n          return setTimer((breakInterval) * 60)          \r\n        }\r\n        else {\r\n        setMode((prevState) => !prevState);\r\n        //change status from Focus to break or vise-versa\r\n        return setTimer((focusInterval) * 60)     \r\n        }\r\n      }\r\n      return setTimer(timer - 1);\r\n    },\r\n    isTimerRunning ? 500 : null\r\n  );\r\nconsole.log(mode)\r\nconsole.log(timer)\r\n\r\n  return (\r\n    <div className=\"row mb-2\">\r\n      <div className=\"col\">\r\n        {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\r\n        <h2 data-testid=\"session-title\">\r\n          {mode ? \"Focusing\" : \"Break\"} for {mode ? focusInterval : breakInterval} minutes\r\n        </h2>\r\n        {/* TODO: Update message below to include time remaining in the current session */}\r\n        <p className=\"lead\" data-testid=\"session-sub-title\">\r\n          {secondsToDuration(timer)} remaining\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FocusTimer;\r\n"]},"metadata":{},"sourceType":"module"}