{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Thinkful\\\\qualified-exercises\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ProgressBar.js\";\n\nfunction ProgressBar({\n  timer,\n  focusInterval,\n  breakInterval,\n  mode\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": (1 - timer / (focusInterval * 60)) * 100 // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${(1 - timer / (focusInterval * 60)) * 100}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 15\n    }\n  }))));\n}\n\nexport default ProgressBar;","map":{"version":3,"sources":["C:/Users/micha/Thinkful/qualified-exercises/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressBar.js"],"names":["ProgressBar","timer","focusInterval","breakInterval","mode","height","width"],"mappings":";;AAAA,SAASA,WAAT,CAAqB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,aAAR;AAAuBC,EAAAA,aAAvB;AAAsCC,EAAAA;AAAtC,CAArB,EAAkE;AAElE,sBACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACU;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAe,CAAC,IAAIJ,KAAK,IAAEC,aAAa,GAAG,EAAlB,CAAV,IAAmC,GALpD,CAKyD;AALzD;AAME,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAG,GAAE,CAAC,IAAIL,KAAK,IAAEC,aAAa,GAAG,EAAlB,CAAV,IAAmC,GAAI;AAAnD,KANT,CAMkE;AANlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADV,CADA;AAiBC;;AAED,eAAeF,WAAf","sourcesContent":["function ProgressBar({timer, focusInterval, breakInterval, mode}) {\r\n\r\nreturn (\r\n<div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={(1 - timer/(focusInterval * 60)) * 100} // TODO: Increase aria-valuenow as elapsed time increases\r\n                style={{ width: `${(1 - timer/(focusInterval * 60)) * 100}%` }} // TODO: Increase width % as elapsed time increases\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n)\r\n\r\n}\r\n\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}