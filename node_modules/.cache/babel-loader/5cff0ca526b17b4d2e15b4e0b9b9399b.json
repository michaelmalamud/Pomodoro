{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Thinkful\\\\qualified-exercises\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport Timer from \"./Timer\";\nimport TimerSetter from \"./TimerSetter\";\nimport ProgressBar from \"./ProgressBar\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusInterval, setFocusInterval] = useState(25);\n  const [breakInterval, setBreakInterval] = useState(5);\n  const [disabled, setDisabled] = useState(false);\n  const [display, setDisplay] = useState({\n    display: \"none\"\n  }); // const [timer, setTimer] = useState(focusInterval * 60)\n\n  const [session, setSession] = useState({\n    mode: \"Focusing\",\n    timer: focusInterval * 60\n  });\n\n  function sessionHandler() {\n    if (session.mode === \"Focusing\") {\n      return setSession({\n        mode: \"On Break\",\n        timer: breakInterval * 60\n      });\n    }\n\n    return setSession({\n      mode: \"Focusing\",\n      timer: focusInterval * 60\n    });\n  } //   function handleFocusUp() {\n  //    if (parseFloat(focusInterval) < 60)\n  //    setFocusInterval(minutesToDuration(parseFloat(focusInterval) + 5));\n  //    setTimer((parseFloat(focusInterval) + 5) * 60);\n  // }\n  // function handleFocusDown() {\n  //   if (parseFloat(focusInterval) > 5)\n  //   setFocusInterval(minutesToDuration(parseFloat(focusInterval) - 5))\n  //   setTimer((parseFloat(focusInterval) + 5) * 60);\n  // }\n  // function handleBreakUp() {\n  //   if (parseFloat(breakInterval) < 15)\n  //   setBreakInterval(minutesToDuration(parseFloat(breakInterval)+ 1));\n  // }\n  // function handleBreakDown() {\n  //  if (parseFloat(breakInterval) > 1)\n  //  setBreakInterval(minutesToDuration(parseFloat(breakInterval) - 1));\n  // }\n\n\n  function handleFocusUp() {\n    setFocusInterval(focusInterval => focusInterval < 60 ? focusInterval + 5 : focusInterval);\n\n    if (session.mode === \"Focusing\") {\n      setSession({ ...session,\n        timer: (focusInterval < 60 ? focusInterval + 5 : focusInterval) * 60\n      });\n    }\n  }\n\n  function handleFocusDown() {\n    setFocusInterval(focusInterval => focusInterval > 5 ? focusInterval - 5 : focusInterval);\n    if (session.mode === \"Focusing\") setSession({ ...session,\n      timer: (focusInterval > 5 ? focusInterval - 5 : focusInterval) * 60\n    });\n  }\n\n  function handleBreakUp() {\n    setBreakInterval(breakInterval => breakInterval < 15 ? breakInterval + 1 : breakInterval); // setSession({...session, timer: (breakInterval <15 ? breakInterval + 1 : breakInterval) * 60})\n  }\n\n  function handleBreakDown() {\n    setBreakInterval(breakInterval => breakInterval > 1 ? breakInterval - 1 : breakInterval); // setSession({...session, timer: (breakInterval > 1 ? breakInterval - 1 : breakInterval) * 60})\n  } // if(timer === 0) {\n  //   setTimer(parseFloat(breakInterval) * 60 - 1);\n  // }\n\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n    setDisabled(prevState => !prevState);\n    setDisplay({\n      display: \"block\"\n    });\n  }\n\n  function handleStop() {\n    setIsTimerRunning(false);\n    setFocusInterval(25);\n    setBreakInterval(5);\n    setDisabled(false);\n    setDisplay({\n      display: \"none\"\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TimerSetter, {\n    focusInterval: focusInterval,\n    breakInterval: breakInterval,\n    handleFocusDown: handleFocusDown,\n    handleFocusUp: handleFocusUp,\n    handleBreakDown: handleBreakDown,\n    handleBreakUp: handleBreakUp,\n    playPause: playPause,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    disabled: !disabled,\n    onClick: handleStop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: display,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    focusInterval: focusInterval,\n    breakInterval: breakInterval,\n    isTimerRunning: isTimerRunning,\n    session: session,\n    setSession: setSession,\n    sessionHandler: sessionHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, isTimerRunning ? null : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"PAUSED\")), /*#__PURE__*/React.createElement(ProgressBar, {\n    focusInterval: focusInterval,\n    breakInterval: breakInterval,\n    session: session,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/micha/Thinkful/qualified-exercises/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","Timer","TimerSetter","ProgressBar","Pomodoro","isTimerRunning","setIsTimerRunning","focusInterval","setFocusInterval","breakInterval","setBreakInterval","disabled","setDisabled","display","setDisplay","session","setSession","mode","timer","sessionHandler","handleFocusUp","handleFocusDown","handleBreakUp","handleBreakDown","playPause","prevState","handleStop","oi"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport Timer from \"./Timer\";\nimport TimerSetter from \"./TimerSetter\";\nimport ProgressBar from \"./ProgressBar\"\n\n\n\nfunction Pomodoro() {\n\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusInterval, setFocusInterval] = useState(25);\n  const [breakInterval, setBreakInterval] = useState(5);\n  const [disabled, setDisabled] = useState(false);\n  const [display, setDisplay] = useState({display: \"none\"})\n  // const [timer, setTimer] = useState(focusInterval * 60)\n  const [session, setSession] = useState({mode: \"Focusing\", timer: focusInterval* 60})\n\n  function sessionHandler() {\n    if (session.mode === \"Focusing\") {\n      return setSession({mode: \"On Break\", timer: breakInterval * 60})\n    }\n    return setSession({mode: \"Focusing\", timer: focusInterval * 60})\n  }\n\n\n\n//   function handleFocusUp() {\n//    if (parseFloat(focusInterval) < 60)\n//    setFocusInterval(minutesToDuration(parseFloat(focusInterval) + 5));\n//    setTimer((parseFloat(focusInterval) + 5) * 60);\n// }\n\n// function handleFocusDown() {\n//   if (parseFloat(focusInterval) > 5)\n//   setFocusInterval(minutesToDuration(parseFloat(focusInterval) - 5))\n//   setTimer((parseFloat(focusInterval) + 5) * 60);\n// }\n\n// function handleBreakUp() {\n//   if (parseFloat(breakInterval) < 15)\n//   setBreakInterval(minutesToDuration(parseFloat(breakInterval)+ 1));\n\n// }\n\n// function handleBreakDown() {\n//  if (parseFloat(breakInterval) > 1)\n//  setBreakInterval(minutesToDuration(parseFloat(breakInterval) - 1));\n// }\n\n\nfunction handleFocusUp() {\n  setFocusInterval((focusInterval) => focusInterval < 60 ? focusInterval + 5 : focusInterval);\n  if (session.mode === \"Focusing\") {\n  setSession ({...session, timer: (focusInterval < 60 ? focusInterval + 5 : focusInterval) * 60});\n  }\n}\n\nfunction handleFocusDown() {\n  setFocusInterval((focusInterval) => focusInterval > 5 ? focusInterval - 5 : focusInterval);\n  if (session.mode === \"Focusing\") \n  setSession({...session, timer: (focusInterval > 5 ? focusInterval - 5 : focusInterval) * 60}); \n}\nfunction handleBreakUp() {\n  setBreakInterval((breakInterval) => breakInterval < 15 ? breakInterval + 1 : breakInterval);\n  // setSession({...session, timer: (breakInterval <15 ? breakInterval + 1 : breakInterval) * 60})\n}\nfunction handleBreakDown() {\n  setBreakInterval((breakInterval) => breakInterval > 1 ? breakInterval - 1 : breakInterval);\n  // setSession({...session, timer: (breakInterval > 1 ? breakInterval - 1 : breakInterval) * 60})\n}\n        // if(timer === 0) {\n        //   setTimer(parseFloat(breakInterval) * 60 - 1);\n        // }\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n    setDisabled((prevState) => !prevState);\n    setDisplay({display: \"block\"});\n  }\n\n  function handleStop() {\n    setIsTimerRunning(false);\n    setFocusInterval(25);\n    setBreakInterval(5);\n    setDisabled(false);\n    setDisplay({display: \"none\"});\n  }\n\n  return (\n    <div className=\"pomodoro\">\n        <TimerSetter \n        focusInterval={focusInterval}\n        breakInterval={breakInterval}\n        handleFocusDown={handleFocusDown} \n        handleFocusUp={handleFocusUp}\n        handleBreakDown={handleBreakDown}\n        handleBreakUp={handleBreakUp}\n        playPause={playPause}\n        disabled={disabled}/>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              disabled={!disabled}\n              onClick={handleStop}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div style={display}>\n       <Timer focusInterval={focusInterval} breakInterval={breakInterval} isTimerRunning={isTimerRunning} session={session} setSession={setSession} sessionHandler={sessionHandler}/> \n        <div>\n         {isTimerRunning ? \n         null : <h3>PAUSED</h3>}\n        </div>\n        <ProgressBar focusInterval={focusInterval} breakInterval={breakInterval} session={session}/>\n      </div>\n      </div>\n  );\n}\n\nexport default Pomodoro;\n\n"]},"metadata":{},"sourceType":"module"}